# -*- coding: utf-8 -*-
"""ML_assign_1_q3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16XD4NaCUDVA-bmp07UHn_WViHvTl7CdM

<h1>Question 3</h1>

Question 3 part a and b
"""

import numpy as np
import matplotlib.pyplot as plt

gauss = np.random.multivariate_normal(np.zeros(3), np.eye(3), size=10000); gauss

gauss.shape

l1_norms = list()
l2_norms = list()
for i in range(0, 10000):
  vec = gauss[i]
  l1 = np.linalg.norm(vec, 1)
  l2 = np.linalg.norm(vec, 2)
  l1_norms.append(l1)
  l2_norms.append(l2)

print(l1_norms)
print(len(l1_norms))  
print(l2_norms)
print(len(l2_norms))

plt.hist(l1_norms) 
plt.hist(l2_norms)

l1_norm_mean = np.mean(l1_norms)
l2_norm_mean = np.mean(l2_norms)

l1_norm_std = np.std(l1_norms)
l2_norm_std = np.std(l2_norms)

print(l1_norm_mean)
print(l2_norm_mean)
print(l1_norm_std)
print(l2_norm_std)

"""Question 3 part c"""

d_values = [50, 100, 200, 500, 1000]
all_l1_norms = list()
all_l2_norms = list()
for i in d_values:
  gauss = np.random.multivariate_normal(np.zeros(i), np.eye(i), size=10000)
  l1_norms = list()
  l2_norms = list()
  for i in range(0, 10000):
    vec = gauss[i]
    l1 = np.linalg.norm(vec, 1)
    l2 = np.linalg.norm(vec, 2)
    l1_norms.append(l1)
    l2_norms.append(l2)
    
  all_l1_norms.append(l1_norms)
  all_l2_norms.append(l2_norms)

for i in all_l1_norms:
  plt.hist(i)

for i in all_l2_norms:
  plt.hist(i)

all_l1_norm_means = list()
all_l2_norm_means = list()
all_l1_norm_std = list()
all_l2_norm_std = list()

for i in all_l1_norms:
  all_l1_norm_means.append(np.mean(i)) 
  all_l1_norm_std.append(np.std(i)) 

for i in all_l2_norms:
  all_l2_norm_means.append(np.mean(i)) 
  all_l2_norm_std.append(np.std(i))

# plt.scatter(d_values, all_l1_norm_means)
plt.plot(d_values, all_l1_norm_means,'bo-',markevery=1)
plt.title('Variation of mean values l1 norm w.r.t d values')
plt.xlabel('d_values')
plt.ylabel('means of l1 norm')

plt.scatter(d_values, all_l1_norm_means)
# plt.plot(d_values, all_l1_norm_means,'bo-',markevery=1)
plt.title('Variation of mean values l1 norm w.r.t d values')
plt.xlabel('d_values')
plt.ylabel('means of l1 norm')

# plt.scatter(d_values, all_l1_norm_std)
plt.plot(d_values, all_l1_norm_std,'bo-',markevery=1)
plt.title('Variation of std values l1 norm w.r.t d values')
plt.xlabel('d_values')
plt.ylabel('std of l1 norm')

# plt.scatter(d_values, all_l2_norm_means)
plt.plot(d_values, all_l2_norm_means,'bo-',markevery=1)
plt.title('Variation of mean values l2 norm w.r.t d values')
plt.xlabel('d_values')
plt.ylabel('means of l2 norm')

# plt.scatter(d_values, all_l2_norm_std)
plt.plot(d_values, all_l2_norm_std,'bo-',markevery=1)
plt.title('Variation of std values l2 norm w.r.t d values')
plt.xlabel('d_values')
plt.ylabel('std of l2 norm')

plt.scatter(d_values, all_l2_norm_std)
# plt.plot(d_values, all_l2_norm_std,'bo-',markevery=1)
plt.title('Variation of std values l2 norm w.r.t d values')
plt.xlabel('d_values')
plt.ylabel('std of l2 norm')

"""Part d

From the plots of part c we can conclude the following,
1) Mean of L1 norm varies linearly w.r.t increase in 'd' values
2) Standard deviation of L1 norm varies almost linearly w.r.t increase in d values
3) Mean of L2 norm varies almost linearly w.r.t increase in d values
4) Standard deviation of L2 norm does not vary much with the increase in d values. Which means even if the number of dimensions is increased the values of L2 norm do not vary by a significant amount.
"""

